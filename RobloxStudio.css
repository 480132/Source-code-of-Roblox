QAbstractItemView
{
    border: 1px solid #C4C4C4;
    selection-color: white;
    selection-background-color: transparent;
    alternate-background-color: #F9F9F9;
}

QAbstractItemView::item 
{
    border: 1px solid transparent;
}

QAbstractItemView::item:hover 
{
    border: 1px solid #BFCDE4;
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #E7EFFD, stop: 1 #CBDAF1);
}

QAbstractItemView::item:selected 
{
    border: 1px solid #567DBC;
}

QAbstractItemView::item:selected:active
{
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6EA1F1, stop: 1 #567DBC);
}

QAbstractItemView::item:selected:!active 
{
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6B9BE8, stop: 1 #577FBF);
}

QComboBox QAbstractItemView
{
    selection-background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #6EA1F1, stop: 1 #567DBC);
}

/* Setting the TabBar's left and right arrow's background color explicitly because the Qt default is transparent
   which looks incorrect when overlapping tabs. */
QTabBar QToolButton
{
    background: #EEEEEE;
}

QTabBar
{
    background: #C4C4C4;
}

QDockWidget::title
{
   background: #D0D0D0;
   text-align: center;
}

QTabBar::tab {
    background: #F2F2F2;
    border: 1px solid #C4C4C4;
    min-width: 8ex;
    padding: 1px;
    padding-left: 6px;
    padding-right: 8px;
}

QTabBar::tab:selected, QTabBar::tab:hover {
    background: #F5F5F5;
    border: 1px solid #C4C4C4;
}

QTabBar::tab:selected {
    background: #FFFFFF;
    border: 1px solid #FFFFFF;
}

